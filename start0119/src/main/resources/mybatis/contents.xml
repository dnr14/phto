<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.contents.ContentsDAOInter"> 
	
	<!-- 상품 가져오기 -->
	<select id="CateGroupAjax" parameterType="int" resultType="stockVO">
		select stockno,stockname
		from stock 
		where categrpno = #{categrpno}
		order by stockrdate desc
	</select>
	
	<!-- 내용 등록 -->
	<insert id="create" parameterType="ContentsCreateDto">
		insert into contents
		( contentsno, categrpno, stockno, title, keyword, deliveryCharge, manager, contents)
		values(
		 (select nvl(max(contentsno),0)+1 as contentsno from contents ),
		 #{categrpNo},
		 #{stockNo},
		 #{title},
		 #{keyword},
		 #{deliveryCharge},
		 #{manager},   
		 #{contents}
		)
	</insert>
	
	<!-- 등록한 게시글 번호 가져오기 -->
	<select id="cotentsNoSelect" resultType="int">
		select max(contentsno) as contentsno from contents
	</select>
	
	
	<!-- 게시글 총 갯수 -->
	<!--  카테고리에 따라 유동적으로 -->
	<select id="pagingCount" parameterType="HashMap" resultType="int" >
		select count(row_cnt) as count
		from (
		    select ROW_NUMBER() OVER(ORDER BY rdate desc) AS row_cnt, 
		    title, keyword, cf.thumb, cnt, likey
		    from contents c Inner join contents_file cf
		    on c.contentsno = cf.contents_no
		    where cf.thumb is not null 
		    <if test="categrpno >0">
				    and c.categrpno = #{categrpno}
		    </if>
		    <if test="title != null">
		    	  and c.TITLE LIKE '%'||#{title}||'%' 
		    </if>
		)
	</select>
	
	<!-- 게시판 상세 불러오기 -->
	<select id="read" parameterType="int" resultType="ContentsVO">
		SELECT c.categrpname, c.categrpno, s.stockname, s.stockprice, s.stockcnt, s.stockno,
		p.title, p.deliverycharge, p.contentsno, p.contents, p.keyword, p.manager
		FROM CATEGROUP C INNER JOIN CONTENTS P
		ON c.categrpno = P.CATEGRPNO INNER JOIN STOCK S
		ON p.stockno = s.stockno
		WHERE p.contentsno = #{contentsno}
	</select>
	
	<update id="update" parameterType="HashMap">
		UPDATE CONTENTS SET 
		CATEGRPNO = #{categrpNo},
		STOCKNO = #{stockNo},
		TITLE = #{title},
		deliverycharge = #{deliveryCharge},
		CONTENTS = #{contents},
		KEYWORD = #{keyword},
		MANAGER = #{manager}
		WHERE contentsno = #{contentsNo}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM CONTENTS WHERE CONTENTSNO = #{contentsNo}
	</delete>
	
	
	
</mapper>