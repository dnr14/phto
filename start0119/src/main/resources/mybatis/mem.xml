<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.member.memberDAOInter"> 

	<!--  아이디 생성 -->    
	<insert id="create" parameterType="memberCreateRequest">
		insert into mem(memno, id,email,pwd,phone,zipcode,address1,address2,key) 
		values((select nvl(max(memno),0) + 1 as memno from mem) ,#{id}, #{email},  #{pwd},  #{phone} , #{zipcode}, #{address1}, #{address2}, #{key})
	</insert>
	
	<!--  이메일 중복 확인 -->
	<select id="selectByEamil" parameterType="String" resultType="int">
		select count(email)
		from mem 
		where email = #{email} 
	</select>
	
	<!--  아이디 중복 확인 -->
	<select id="selectById" parameterType="String" resultType="int">
		select count(id)
		from mem 
		where id = #{id} 
	</select>
	
	<!-- 로그인  -->
	<select id="loginCheck" parameterType="memberLoginCheck" resultType="memberVO">
		select id,pwd,key
		from mem
		where id = #{id}
	</select>
	
	<!--  아이디 Count -->
	<select id="IdFindCount" parameterType="String" resultType="int">
		select count(email) 
		from mem
		where email = #{email}
	</select>
	
	<!--  아이디 찾기 -->
	<select id="IdFind" parameterType="String" resultType="String">
		select id
		from mem
		where email = #{email}
	</select>
	
	<!-- 비밀번호 Count -->
	<select id="PwdFindCount" parameterType="memberIdPwdFind" resultType="int">
		select count(id)
		from mem
		where email = #{email} and id =#{id}
	</select>
	
	<!--  비밀번호 찾기 -->
	<select id="PwdFind" parameterType="memberIdPwdFind" resultType="String">
		select pwd
		from mem
		where email = #{email} and id =#{id}
	</select>
	
	<!-- Key 가져오기 -->
	<select id="selectByKey" parameterType="String" resultType="String">
		select key
		from mem
		where id= #{id}
	</select>
	
	<!-- key Y로 업데이트 -->
	<update id="updateKey" parameterType="String">
		update mem set key = 'Y' 
		where id = #{id}
	</update>
	
	<!-- 회원 정보 조회 -->
	<select id="memberSelect" parameterType="String" resultType="memberVO">
		select * from mem
		where id = #{id}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="memberUpdate" parameterType="memberCreateRequest">
		update mem set phone =#{phone} , zipcode = #{zipcode}, address1=#{address1}, address2=#{address2}
		where id = #{id} and email =#{email}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="memberPwdUpdate" parameterType="hashMap">
		update mem set pwd = #{afterPwd} 
		where id = #{id}
	</update>
	
	<delete id="memberDelete" parameterType="String">
		delete
		from mem
		where id = #{id}
	</delete>
	
	
	
	
	
	
	
	
</mapper>